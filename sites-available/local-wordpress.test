#
# Virtual Host:   WordPress configuration (public)
# Project:        local-wordpress.test
#

# Upstream to abstract backend connection(s) for php
upstream up-local-wordpress-test {
    server unix:/tmp/php-fpm.sock;
    server 127.0.0.1:9000;
}

# Server domain rewrite
server {
    listen 80;  # IPv4
    server_name www.local-wordpress.test local-wordpress.test;
    return 301 $scheme://local-wordpress.test$request_uri;
}

# HTTP Server
server {
    listen 80;  # IPv4
    server_name local-wordpress.test;

    # Access and error logs
    access_log /var/www/local-wordpress.test/logs/access.log;
    error_log /var/www/local-wordpress.test/logs/error.log;

    # Any location block path will be relative to this root
    root /var/www/local-wordpress.test/public_html;
    index index.php;

    # WP Multisite
    # if (!-e $request_filename) {
    #     # rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    #     rewrite ^.+?(/wp-.*) $1 last;
    #     rewrite ^.+?(/.*\.php)$ $1 last;
    #     rewrite ^ /index.php last;
    # }

    # Specify a charset
    charset utf-8;

    # Use ChromeFrame if it's installed for IE users
    add_header "X-UA-Compatible" "IE=Edge,chrome=1";

    # See the blacklist.conf file at the parent dir: /opt/nginx.
    # Deny access based on the User-Agent header.
    if ($bad_bot) {
        return 444;
    }

    # Deny access based on the Referer header.
    if ($bad_referer) {
        return 444;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store.
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
    }

    # All files/directories that are protected and unaccessible from the web.
    location ~* ^.*(\.(?:git|svn|htaccess|txt|pot?))$ {
        return 404;
    }

    # Redirect /email to gandi email for easy access to webmail
    # location /email {
    #     rewrite ^/email(.*) https://webmail.gandi.net/?_action=plugin.lang_sel&_lang_sel=fr_FR permanent;
    # }

    # Redirect /admin to wp administration for easy access
    location /admin {
        rewrite ^/admin(.*) http://local-wordpress.test/wp-login.php permanent;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        # NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
        include /etc/nginx/conf/fastcgi_params;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/local-wordpress.test/public_html$fastcgi_script_name;
        fastcgi_intercept_errors on;
        fastcgi_pass up-local-wordpress-test;
    }

    # Directives to send expires headers and turn off 404 error logging.
    location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        expires max;
        log_not_found off;
        access_log off;
    }

    # Pseudo streaming for FLVs.
    # http://wiki.nginx.org/HttpFlvStreamModule.
    location ~* \.flv$ {
        flv;
    }

    # Pseudo streaming of H264/AAC files. This requires an Nginx
    # version greater or equal to 1.0.7 for the stable branch and
    # greater or equal to 1.1.3 for the development branch.
    # Cf. http://nginx.org/en/docs/http/ngx_http_mp4_module.html.
    location ~* .*\.(?:m4a|mp4|mov)$ {
        mp4;
        mp4_buffer_size 1M;
        mp4_max_buffer_size 5M;
    }

    # The final attempt to serve the request.
    location @nocache {
        try_files $uri $uri/ /index.php?q=$uri&$args;
    }
}
